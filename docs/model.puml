

@startuml Model

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

class Model
{
    - projectName : QString
    - components : QMap<int,Component*>
    - codeblocks : QMap<int,CodeBlock*>
    - structs : QMap<int,Struct*>
    - mainIdOrder : QVector<int>
    - lastID : int
    - compilerPath : QString
    - compilerArguments : QStringList
    - compilerPathSet : bool
    - compileProcess : QProcess*
    - compileOutput : QString
    - dataAccess : DataAccess
    - settings : QSettings*
--
    - newID() : int
    - loadConfig() : void
    - generateMainSource() : QString
    - replaceReference(QString codeString) : QString
    - getReferenceSource(QString objectName) : QString
    + Model(QObject *parent)
    + generateSource() : QString
    + createComponent(QString name, ComponentType type) : int
    + createCodeBlock() : int
    + createStruct(QString name) : int
    + createMember(int componentID) : int
    + createCustomMethod(int componentID) : int
    + isComponentNameUsed(QString name) : bool
    + isObjectNameUsed(QString objectName) : bool
    + getEnumeratorNameById(int enumeratorID) : QString
    + modifyMember(int componentID, int memberID, QString type, QString name) : void
    + modifyCustomMethod(int componentID, int customMethodID, QString header, QString body) : void
    + deleteComponent(int componentID) : void
    + deleteCodeBlock(int codeBlockID) : void
    + deleteStruct(int structID) : void
    + deleteMember(int componentID, int memberID) : void
    + deleteCustomMethod(int componentID, int customMethodID) : void
    + setUseInMain(int componentID, bool useInMain) : void
    + setObjectName(int componentID, QString objectName) : void
    + setItem(int componentID, QString item) : void
    + setValue(int componentID, QString value) : void
    + setOptimist(int componentID, bool optimist) : void
    + setCompare(int componentID, QString compare) : void
    + setEnumerator(int componentID, int enumeratorID) : void
    + setMethod(int componentID, MethodType methodType, QString methodBody) : void
    + setCode(int codeBlockID, QString code) : void
    + setCompilerPath(QString path) : void
    + setCompilerArguments(QString path) : void
    + setMainIdOrder(QVector<int> ids) : void
    + run() : void
    + compile() : void
    + stopCompile() : void
    + getCompileOutput() : QString
    + getCompilerPath() : QString
    + getCompilerArguments() : QStringList
    + getProjectName() : QString
    + newProject() : bool
    + saveProject() : bool
    + setProject(QString file) : void
    + openProject() : void
.. <<signals>> ..
    + compilerPathNotSet() : void
    + haveCompileOutput(QString output) : void
    + compileProcessEnded() : void
    + needProjectNameForSave() : void
    + needProjectNameForOpen() : void
    + projectLoaded(const SaveData& data) : void
    + cleared() : void
.. <<slots>> ..
    - compileFinished(int exitCode, QProcess::ExitStatus exitStatus) : void
    - compileError(QProcess::ProcessError error) : void
}

@enduml

@startuml ComponentType

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

enum ComponentType{
    COUNTING
    LINSEARCH
    MAXSEARCH
    SELECTION
    SUMMATION
    DEFAULT
    ARRAY
    INTERVAL
    STRINGSTREAM
    SEQINFILE
}

@enduml

@startuml MethodType

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

enum MethodType{
    DESTRUCTOR
    NEUTRAL
    ADD
    FUNC
    COND
    FIRST
    WHILECOND
    NEXT
    END
    CURRENT
}

@enduml

@startuml Member

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

class Member
{
    + id : int
    + type : QString
    + name : QString
--
    + Member()
    + Member(int id)
    + Member(QString type, QString name)
}

@enduml

@startuml CustomMethod

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

class CustomMethod
{
    + header : QString
    + body : QString
    + id : int
--
    + CustomMethod()
    + CustomMethod(int id)
    + CustomMethod(QString header, QString body)
}

@enduml

@startuml Component

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

class Component
{
    - name : QString
    - id : int
    - useInMain : bool
    - objectName : QString
    - type : ComponentType
    - item : QString
    - enumeratorID : int
    - enumeratorObjectName : QString
    - optimist : bool
    - value : QString
    - compare : QString
    - methods : QMap<MethodType,QString>
    - members : QMap<int,Member>
    - customMethods : QMap<int,CustomMethod>

    + Component(QString name, ComponentType type, int id)
    + getSource() const : QString
    + getSourceForMain() const : QString
    + getSourceForObjectCreation() const : QString
    + getName() const : QString
    + getID() const : int
    + getUseInMain() const : bool
    + getObjectName() const : QString
    + getType() const : ComponentType
    + getItem() const : QString
    + getEnumeratorID() const : int
    + getEnumeratorObjectName() const : QString
    + getOptimist() const : bool
    + getValue() const : QString
    + getCompare() const : QString
    + getMethods() const : QMap<MethodType,QString>
    + getMembers() const : QMap<int,Member>
    + getCustomMethods() const : QMap<int,CustomMethod>
    + setUseInMain(bool useInMain) : void
    + setObjectName(QString objectName) : void
    + setItem(QString item) : void
    + setValue(QString value) : void
    + setOptimist(bool optimist) : void
    + setCompare(QString compare) : void
    + setEnumerator(int enumeratorID, QString enumeratorObjectName) : void
    + setMethod(MethodType methodType, QString methodBody) : void
    + setMember(int id, QString type, QString name) : void
    + createMember(int id) : void
    + deleteMember(int id) : void
    + setCustomMethod(int id, QString header, QString body) : void
    + createCustomMethod(int id) : void
    + deleteCustomMethod(int id) : void
    + setMethods(QMap<MethodType,QString> methods) : void
    + setMembers(QMap<int,Member> members) : void
    + setCustomMethods(QMap<int,CustomMethod> customMethods) : void
}

@enduml

@startuml CodeBlock

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

class CodeBlock
{
    - id : int
    - code : QString

    + CodeBlock(int id)
    + getSource() : QString
    + getID() const : int
    + getCode() : QString
    + setCode(QString code) : void
}

@enduml

@startuml Struct

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

class Struct
{
    - name : QString 
    - id : int
    - members : QMap<int,Member>
    - customMethods : QMap<int,CustomMethod>

    + Struct(QString name, int id)
    + getSource() : QString
    + getName() const : QString
    + getID() const : int
    + getMembers() const : QMap<int,Member>
    + getCustomMethods() const : QMap<int,CustomMethod>
    + setMember(int id, QString type, QString name) : void
    + createMember(int id) : void
    + deleteMember(int id) : void
    + setCustomMethod(int id, QString header, QString body) : void
    + createCustomMethod(int id) : void
    + deleteCustomMethod(int id) : void
    + setMembers(QMap<int,Member> members) : void
    + setCustomMethods(QMap<int,CustomMethod> customMethods) : void
}

@enduml

@startuml SaveData

skinparam Monochrome true
skinparam ClassAttributeIconSize 0
hide circle
hide enum methods

class SaveData
{
    + projectName : QString
    + components : QMap<int,Component*>
    + codeblocks : QMap<int,CodeBlock*>
    + structs : QMap<int,Struct*>
    + mainIdOrder : QVector<int>
    + lastID : int

    + SaveData(const QString, const QMap<int,Component*>, const QMap<int,CodeBlock*>,
    \t\t const QMap<int,Struct*>, const QVector<int>, const int)
}

@enduml